/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prueba_3;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Sandro Córdova
 */
public class interfaz_grafica extends javax.swing.JFrame {

    /**
     * Creates new form interfaz_grafica
     */
    public interfaz_grafica() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        pruebaPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("pruebaPU").createEntityManager();
        profesorQuery = java.beans.Beans.isDesignTime() ? null : pruebaPUEntityManager.createQuery("SELECT p FROM Profesor p");
        profesorList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : profesorQuery.getResultList();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        letra = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        pizarra = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cedula = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        apellido = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        carrera = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tipo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        HorasClase = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        HorasComplementarias = new javax.swing.JTextField();
        ingresar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        Modificar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        cedula1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        nombre1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        apellido1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        carrera1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        tipo1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        HorasClase1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        HorasComplementarias1 = new javax.swing.JTextField();
        buscarCedula = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Docentes");

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, profesorList, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cedula}"));
        columnBinding.setColumnName("Cedula");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombres}"));
        columnBinding.setColumnName("Nombres");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${apellidos}"));
        columnBinding.setColumnName("Apellidos");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${carrera}"));
        columnBinding.setColumnName("Carrera");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoprofesor}"));
        columnBinding.setColumnName("Tipoprofesor");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horasclase}"));
        columnBinding.setColumnName("Horasclase");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horascomplementarias}"));
        columnBinding.setColumnName("Horascomplementarias");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Buscar todos los profesores cuyo apellido empiece por la letra:");

        letra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                letraActionPerformed(evt);
            }
        });

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        pizarra.setColumns(20);
        pizarra.setRows(5);
        jScrollPane2.setViewportView(pizarra);

        jLabel3.setText("Ingresar nuevo profesor");

        jLabel4.setText("Cédula");

        jLabel5.setText("Nombres");

        jLabel6.setText("Apellidos");

        jLabel7.setText("Carrera");

        jLabel8.setText("Tipo de profesor");

        jLabel9.setText("Horas Clase");

        jLabel10.setText("Horas complementarias");

        ingresar.setText("Ingresar");
        ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarActionPerformed(evt);
            }
        });

        jLabel11.setText("Modificar profesor en la base de datos");

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        jLabel15.setText("Cédula");

        jLabel16.setText("Nombres");

        jLabel17.setText("Apellidos");

        jLabel18.setText("Carrera");

        jLabel19.setText("Tipo de profesor");

        jLabel20.setText("Horas Clase");

        jLabel21.setText("Horas complementarias");

        buscarCedula.setText("Buscar");
        buscarCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarCedulaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(carrera, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(HorasClase, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(HorasComplementarias, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(311, 311, 311))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(27, 27, 27)
                                .addComponent(letra, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buscar)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(216, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(ingresar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(jLabel11)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel18)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(carrera1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel21)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(HorasComplementarias1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(282, 282, 282)
                            .addComponent(Modificar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(apellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(cedula1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HorasClase1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buscarCedula)
                                    .addComponent(tipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(letra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(carrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(HorasClase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(HorasComplementarias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ingresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cedula1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarCedula))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(tipo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(apellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(HorasClase1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(HorasComplementarias1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(carrera1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(Modificar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void letraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_letraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_letraActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        if (this.letra.getText().length() > 1) {
            JOptionPane.showMessageDialog(null, "Ingrese una sola letra");
        } else {
            String letra = this.letra.getText();
            String aux = " ";

            try {
                Class.forName("org.apache.derby.jdbc.ClientDriver");
                System.out.println("Driver Cargado");

            } catch (Exception e) {
                System.out.println("Error al cargar Driver" + e);
            }
            Connection conexion = null;
            try {
                String urlbd = "jdbc:derby://localhost:1527/prueba";//derby es el tipo de la base de datos
                conexion = DriverManager.getConnection(urlbd, "prueba", "12345");
                System.out.println("Conexión satisfactoria");
            } catch (Exception e) {
                System.out.println("EROR" + e);
            }
            try {
                Statement sentencia = conexion.createStatement();
                ResultSet registros = sentencia.executeQuery("select *from PROFESOR");
                while (registros.next()) {
                    String apellidos = registros.getString("APELLIDOS");
                    String nombres = registros.getString("NOMBRES");
                    String cedula = registros.getString("CEDULA");
                    String carrera = registros.getString("CARRERA");
                    String tipoProfesor = registros.getString("TIPOPROFESOR");
                    int horasClase = registros.getInt("HORASCLASE");
                    int horasComplementarias = registros.getInt("HORASCOMPLEMENTARIAS");
                    if (apellidos.indexOf(letra) == 0) {
                        aux += "Nombres: " + nombres + " Apellidos" + apellidos + " Cédula: " + cedula + " Carrera: " + carrera
                                + " Tipo de Profesor: " + tipoProfesor + " Horas clase: " + horasClase + " Horas complementarias: "
                                + horasComplementarias + "\n";
                    }
                }
//            registros.close();
////            sentencia.close();
//            conexion.close();
            } catch (SQLException sql) {
                System.out.println("ERROR al enviar consulta" + sql);
            }
            if (aux.equals(" ")) {
                pizarra.setText("No se encontró un apellido con esa letra");

            } else {
                pizarra.setText(aux);
            }
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void ingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarActionPerformed

//        if (nombre.getText().equals(" ")||apellido.getText().equals(" ")) {
//            
//        }
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver"); //Agregra driver java db a la libreria
            System.out.println("Driver JavaDB cargado");
        } catch (ClassNotFoundException cnfe) {
            System.out.println("Error al cargar Driver\nAgregar Driver Java DB" + cnfe);
        }
        Connection conexion = null;

        try {
            String urlbd = "jdbc:derby://localhost:1527/prueba";  //ubicacion de la base de datos en nuestra maquina
            conexion = DriverManager.getConnection(urlbd, "prueba", "12345");
            System.out.println("Coneccion satisfactoria");

        } catch (SQLException sqlex) {
            System.out.println("Error al establecer conexion a la BD:" + sqlex);
        }

        try {
            Statement sentencia = conexion.createStatement();
            ResultSet registros = sentencia.executeQuery("select * from PROFESOR"); //ver registros de una tabla

            String sqlInsert = String.format("INSERT INTO profesor VALUES('%s' , '%s','%s','%s' ,'%s', %d , %d)",
                    nombre.getText(), cedula.getText(), apellido.getText(), carrera.getText(), tipo.getText(),
                    Integer.parseInt(HorasClase.getText()), Integer.parseInt(HorasComplementarias.getText()));

            int r = sentencia.executeUpdate(sqlInsert);
            System.out.println("Se han modificado" + r + " registros");

            registros.close();
            sentencia.close();
            conexion.close();
        } catch (SQLException sqlex) {
            System.out.println("Error al enviar consultas:" + sqlex);
        }


    }//GEN-LAST:event_ingresarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed

        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver"); //Agregra driver java db a la libreria
            System.out.println("Driver JavaDB cargado");
        } catch (ClassNotFoundException cnfe) {
            System.out.println("Error al cargar Driver\nAgregar Driver Java DB" + cnfe);
        }
        Connection conexion = null;

        try {
            String urlbd = "jdbc:derby://localhost:1527/prueba";  //ubicacion de la base de datos en nuestra maquina
            conexion = DriverManager.getConnection(urlbd, "prueba", "12345");
            System.out.println("Coneccion satisfactoria");

        } catch (SQLException sqlex) {
            System.out.println("Error al establecer conexion a la BD:" + sqlex);
        }

        try {
            Statement sentencia = conexion.createStatement();
            ResultSet registros = sentencia.executeQuery("select * from PROFESOR"); //ver registros de una tabla

            while (registros.next()) {
                String apellidos = registros.getString("APELLIDOS");
                String nombres = registros.getString("NOMBRES");
                String cedulaa = registros.getString("CEDULA");
                String carreraa = registros.getString("CARRERA");
                String tipoProfesor = registros.getString("TIPOPROFESOR");
                int horasClase = registros.getInt("HORASCLASE");
                int horasComplementarias = registros.getInt("HORASCOMPLEMENTARIAS");
                if (registros.getString("CEDULA").equalsIgnoreCase(cedula1.getText())) {
                    String sqlInsert = String.format("Update profesor set nombres='%s' , cedula='%s', apellidos='%s',carrera='%s',tipoprofesor='%s',horasclase= %d ,horascomplementarias=%d",
                            nombre1.getText(), cedula1.getText(), apellido1.getText(), carrera1.getText(), tipo1.getText(),
                            Integer.parseInt(HorasClase1.getText()), Integer.parseInt(HorasComplementarias1.getText()));

                    int r = sentencia.executeUpdate(sqlInsert);

                    JOptionPane.showMessageDialog(null, "Modificado");
                }
//                    JOptionPane.showMessageDialog(null, "Ocurrio un error, por favor verifique si la cedula existe o si el campo está bien escrito");
            }

            registros.close();
            sentencia.close();
            conexion.close();
        } catch (SQLException sqlex) {
            System.out.println("Error al enviar consultas:" + sqlex);
        }


    }//GEN-LAST:event_ModificarActionPerformed

    private void buscarCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarCedulaActionPerformed
        if (this.letra.getText().length() > 1) {
            JOptionPane.showMessageDialog(null, "Ingrese una sola letra");
        } else {
            String letra = this.letra.getText();
            String aux = " ";

            try {
                Class.forName("org.apache.derby.jdbc.ClientDriver");
                System.out.println("Driver Cargado");

            } catch (Exception e) {
                System.out.println("Error al cargar Driver" + e);
            }
            Connection conexion = null;
            try {
                String urlbd = "jdbc:derby://localhost:1527/prueba";//derby es el tipo de la base de datos
                conexion = DriverManager.getConnection(urlbd, "prueba", "12345");
                System.out.println("Conexión satisfactoria");
            } catch (Exception e) {
                System.out.println("EROR" + e);
            }
            try {
                Statement sentencia = conexion.createStatement();
                ResultSet registros = sentencia.executeQuery("select *from PROFESOR");
                while (registros.next()) {
                    if (registros.getString("CEDULA").equalsIgnoreCase(cedula1.getText())) {

                        String apellidos = registros.getString("APELLIDOS");
                        String nombres = registros.getString("NOMBRES");
                        String cedula = registros.getString("CEDULA");
                        String carrera = registros.getString("CARRERA");
                        String tipoProfesor = registros.getString("TIPOPROFESOR");
                        int horasClase = registros.getInt("HORASCLASE");
                        int horasComplementarias = registros.getInt("HORASCOMPLEMENTARIAS");
                        apellido1.setText(apellidos);
                        nombre1.setText(nombres);
                        cedula1.setText(cedula);
                        carrera1.setText(cedula);
                        tipo1.setText(tipoProfesor);
                        HorasClase1.setText("" + horasClase);
                        HorasComplementarias1.setText("" + horasComplementarias);

                    }

                }
            } catch (SQLException sql) {
                System.out.println("ERROR al enviar consulta" + sql);
            }
            if (aux.equals(" ")) {
                pizarra.setText("No se encontró un apellido con esa letra");

            } else {
                pizarra.setText(aux);
            }
        }
    }//GEN-LAST:event_buscarCedulaActionPerformed

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfaz_grafica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField HorasClase;
    private javax.swing.JTextField HorasClase1;
    private javax.swing.JTextField HorasComplementarias;
    private javax.swing.JTextField HorasComplementarias1;
    private javax.swing.JButton Modificar;
    private javax.swing.JTextField apellido;
    private javax.swing.JTextField apellido1;
    private javax.swing.JButton buscar;
    private javax.swing.JButton buscarCedula;
    private javax.swing.JTextField carrera;
    private javax.swing.JTextField carrera1;
    private javax.swing.JTextField cedula;
    private javax.swing.JTextField cedula1;
    private javax.swing.JButton ingresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField letra;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField nombre1;
    private javax.swing.JTextArea pizarra;
    private java.util.List<prueba_3.Profesor> profesorList;
    private javax.persistence.Query profesorQuery;
    private javax.persistence.EntityManager pruebaPUEntityManager;
    private javax.swing.JTextField tipo;
    private javax.swing.JTextField tipo1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
